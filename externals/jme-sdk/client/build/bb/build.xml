<?xml version="1.0" encoding="iso-8859-1" ?>

<!--
================================================================================
Build file for Funambol Java Client
================================================================================
-->
<project name="Funambol Java Client" default="build_client" basedir="../..">
    <!--
    ========================================================================
     Setting variable
    ========================================================================
    -->
    <target name="init">
        <tstamp>
            <format property="timestamp.MM" pattern="MM" />
            <format property="timestamp.dd" pattern="dd" />
            <format property="timestamp.HH" pattern="HH" />
        </tstamp>

        <property file="${user.home}/funambol/build/bb/build.properties"/>
        <property file="build/common.properties"/>
        <property file="build/bb/build.properties"/>

        <property name="dir.src"          value="${basedir}/src"             />
        <property name="dir.test"         value="${basedir}/test"            />
        <property name="dir.res"          value="${basedir}/res"             />     
        <property name="dir.output"       value="${basedir}/output/bb"       />    
        <property name="dir.preproc.src"  value="${dir.output}/preproc_src"  />
        <property name="dir.docs"         value="${basedir}/docs"            />      
        <property name="dir.output.html"  value="${dir.output}/html"         />
        <property name="dir.classes"      value="${dir.output}/classes"      />
        <property name="dir.tools"        value="${basedir}/../tools"        />
        <property name="dir.selected.src" value="${dir.output}/selected"     />
        <property name="dir.html"         value="${dir.output}/html"         />
        <property name="lib.funambol.common" value="${basedir}/../common/output/bb/funambol-bb-common.jar"/>
        <property name="lib.funambol.syncml" value="${basedir}/../syncml/output/bb/funambol-bb-syncml.jar"/>
    </target>
   
    <target name="selectfiles" depends="init">
        <!-- Copy all the files that need to be compiled in a single directory
             so that we can preprocess them all (when needed)
        -->
        <mkdir dir="${dir.selected.src}"/>
        <copy todir="${dir.selected.src}">
            <fileset dir="${basedir}/src">
                <includesfile name="build/bb/client.includelist"/>
            </fileset>
        </copy>
    </target>

    <target name="selecttestfiles" depends="init">
        <!-- Copy all the files that need to be compiled in a single directory
             so that we can preprocess them all (when needed)
        -->
        <mkdir dir="${dir.selected.src}/test"/>
        <copy todir="${dir.selected.src}/test">
            <fileset dir="${basedir}/test/src">
                <includesfile name="build/bb/clienttest.includelist"/>
            </fileset>
        </copy>
    </target>

    <target name="compile_client" depends="init, selectfiles">
        <mkdir dir="${dir.classes}"/>
        <javac srcdir="${dir.selected.src}" destdir="${dir.classes}"
               target="1.1" source="1.2" debug="${debug}"
               listfiles="yes" >

               <bootclasspath>
                  <pathelement location="${rim.home}/lib/net_rim_api.jar"/>
               </bootclasspath>
               
               <classpath>
                   <pathelement location="${lib.funambol.common}"/>
                   <pathelement location="${lib.funambol.syncml}"/>
               </classpath>
        </javac>
    </target>

    <!-- =============================================== -->
    <!-- CLEAN                                           -->
    <!-- =============================================== -->
    <target name="clean" depends="init">
        <echo message="Clean output tree ${dir.output}"/>
        <delete dir="${dir.output}"/>
        <delete>
            <fileset dir="." includes="**/*.bak"/>
        </delete>
    </target>

    <!-- =============================================== -->
    <!-- BUILD                                           -->
    <!-- =============================================== -->
    <target name="build_client" depends="compile_client">

        <echo message="Packaging library"/>
        <jar destfile="${dir.output}/${jar.name}.jar">
            <fileset dir="${dir.classes}" includes="**/*.class"/>
        </jar>
    </target>

    
    <!-- =================================================================== -->
    <!-- RELEASE                                                             -->
    <!-- When a new release is created, the release.properties file is       -->
    <!-- updated with the current date and incrementing the build number.    -->
    <!-- ====================================================================-->
    <target name="release_single">
        <antcall target="compile_single"/>
        <antcall target="docs"/> <!-- public javadocs for release -->
        <zip zipfile="${dir.output}/${j2me.name}-${j2me.version}.zip">
            <zipfileset dir="." includes="**/*" excludes="CVS/, **/nbproject/"/>
        </zip>
        
    </target>


    <!-- =============================================== -->
    <!-- TEST                                            -->
    <!-- =============================================== -->
    <target name="compile_client_test" depends="init, compile_client">
        <taskdef name="generatetestsuite" classname="com.funambol.testsuitegenerator.TestSuiteGenerator"
                 classpath="${dir.tools}/TestSuiteGenerator.jar" />

        <generatetestsuite srcdir="${dir.test}"
                           destdir="${dir.test}">
        </generatetestsuite>

        <javac srcdir="${dir.test}" destdir="${dir.classes}"
               target="1.1" source="1.2" debug="${debug}"
               listfiles="yes">

               <bootclasspath>
                  <pathelement location="${rim.home}/lib/net_rim_api.jar"/>
               </bootclasspath>
               <classpath>
                   <pathelement location="${lib.junit}"/>
                   <pathelement location="${lib.funambol.common}"/>
               </classpath>

               <bootclasspath>
                   <pathelement location="${rim.home}/lib/"/>
               </bootclasspath>
        </javac>
    </target>

    <target name="test_client" depends="init, compile_client, compile_client_test">
        <junit printsummary="yes" haltonfailure="yes">
            <classpath>
                <pathelement location="${lib.junit}"/>
                <pathelement path="${dir.classes}"/>
                <pathelement location="${lib.funambol.common}"/>
            </classpath>

            <formatter type="plain"/>

            <test name="FunTestSuite" haltonfailure="no"
                  outfile="result">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>
    
    <!-- =============================================== -->
    <!-- DOCS                                            -->
    <!-- =============================================== -->
    <target name="docs" depends="init">
        <ant antfile="${basedir}/build/build.xml" target="docs">
            <property name="dir.html"            value="${dir.html}"/>
            <property name="dir.src"             value="${dir.src}"/>
            <property name="lib.funambol.common" value="${lib.funambol.common}"/>
            <property name="wtk.home"            value="${wtk.home}"/>
            <property name="classpath"           value="${classpath}"/>
            <property name="platform"            value="Java SE"/>
        </ant>
    </target>
</project>

