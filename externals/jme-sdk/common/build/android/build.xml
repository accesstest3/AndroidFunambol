<?xml version="1.0" encoding="iso-8859-1" ?>

<!--
================================================================================
Build file for Funambol Java Common API.
================================================================================
-->

<project name="Funambol Java Common" default="build" basedir="../..">
    <!--
    ========================================================================
     Setting variable
    ========================================================================
    -->
    <target name="init">
        <tstamp>
            <format property="timestamp.MM" pattern="MM" />
            <format property="timestamp.dd" pattern="dd" />
            <format property="timestamp.HH" pattern="HH" />
        </tstamp>
        <property file="${user.home}/funambol/build/android/build.properties"/>
        <property file="build/common.properties"/>
        <property file="build/android/build.properties"/>
   
        <property name="dir.output"       value="${basedir}/output/android"/>
        <property name="dir.classes"      value="${dir.output}/classes"/>
        <property name="dir.src"          value="${basedir}/src"/>
        <property name="dir.test"         value="${basedir}/test/src"/>
        <property name="dir.selected.src" value="${dir.output}/selected"/>
        <property name="jar.name"         value="funambol-android-common.jar"/>
        <property name="jar.test.name"    value="funambol-android-common-test.jar"/>
        <property name="dir.tools"        value="${basedir}/../tools"/>
        <property name="dir.html"         value="${dir.output}/html"/>

        <!-- External dependencies -->
        
        <!-- Platform specific SDK location -->
        <condition property="sdk-folder-platform" value="${sdk-folder}/platforms/android-1.5">
            <equals arg1="${android.sdk.version}" arg2="1.5"/>
        </condition>
        <condition property="sdk-folder-platform" value="${sdk-folder}/platforms/android-2.0">
            <equals arg1="${android.sdk.version}" arg2="2.0"/>
        </condition>
        
        <property name="android-jar" value="${sdk-folder-platform}/android.jar" />
    </target>

    <!-- =============================================== -->
    <!-- USAGE                                           -->
    <!-- =============================================== -->
    <target name="usage" depends="init">
        
        <echo message=""/>
        <echo message="Funambol Java Common API build file"/>
        <echo message="------------------------------------------------------"/>
        <echo message=""/>
        <echo message=" Available targets are :"/>
        <echo message=""/>
        <echo message=" usage      --> help on usage"/>
        <echo message=" build      --> builds the project"/>
        <echo message=" rebuild    --> cleans and builds the project"/>
        <echo message=" test       --> builds the test project"/>
        <echo message=" docs       --> builds java-doc"/>
        <echo message=" run        --> builds and runs the test project"/>
        <echo message=" debug      --> builds and runs the test with debug active"/>
        <echo message=" release    --> build release packages"/>
        <echo message=" clean      --> clean up the build directory"/>
        <echo message=""/>
        
    </target>
    
    <!-- =============================================== -->
    <!-- REBUILD                                         -->
    <!-- =============================================== -->
    <target name="rebuild" depends="clean,build"/>
    
    <!-- =============================================== -->
    <!-- BUILD                                           -->
    <!-- =============================================== -->
    <target name="build" depends="compile">
        
        <!--======= Jar up everything ========-->
        <echo message="Packaging library"/>
        <jar destfile="${dir.output}/${jar.name}.jar">
            <fileset dir="${dir.classes}" includes="**/*.class"/>
        </jar>
        
    </target>

    <target name="selectfiles" depends="init">
        <!-- Copy all the files that need to be compiled in a single directory
             so that we can preprocess them all (when needed)
        -->
        <mkdir dir="${dir.selected.src}"/>
        <copy todir="${dir.selected.src}">
            <fileset dir="${basedir}/src">
                <includesfile name="build/android/android.includelist"/>
            </fileset>
        </copy>
    </target>

    <target name="selecttestfiles" depends="init">
        <!-- Copy all the files that need to be compiled in a single directory
             so that we can preprocess them all (when needed)
        -->
        <mkdir dir="${dir.selected.src}/test"/>
        <copy todir="${dir.selected.src}/test">
            <fileset dir="${basedir}/test/src">
                <includesfile name="build/android/androidtest.includelist"/>
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="init, selectfiles">
        <mkdir dir="${dir.classes}"/>
        <javac srcdir="${dir.selected.src}" destdir="${dir.classes}"
               target="1.1" source="1.2" debug="${debug}"
               listfiles="yes" 
               bootclasspath="${android-jar}">
               <classpath>
                   <pathelement location="${lib.gzip}"/>
               </classpath>
        </javac>
    </target>
    
    <!-- =============================================== -->
    <!-- TEST                                            -->
    <!-- =============================================== -->
    <target name="test" depends="init, clean, build, selecttestfiles">
        
        <ant antfile="build/android/test-app/build.xml" >
            <property file="build/android/build.properties"/>
            <property name="basedir" value="${basedir}/build/android/test-app" />
            <property name="srcdir" value="${dir.selected.src}/test" />
            <property name="external-libs" value="${dir.output}" />
        </ant>

    </target>
    
    <target name="run-test" depends="init, test">
        <ant antfile="build/android/test-app/build.xml" target="run-test">
            <property file="build/android/build.properties"/>
            <property name="basedir" value="${basedir}/build/android/test-app" />
        </ant>
    </target>

    <!-- =============================================== -->
    <!-- CLEAN                                           -->
    <!-- =============================================== -->
    <target name="clean" depends="init">
        <echo message="Clean output tree ${dir.output}"/>
        <delete dir="${dir.output}"/>
        <delete dir="${dir.selected.src}"/>
        <delete dir="build/android/test-app/bin"/>
        <delete>
            <fileset dir="." includes="**/*.bak"/>
        </delete>
        <ant antfile="build/android/test-app/build.xml" target="clean">
            <property name="basedir" value="." />
        </ant>
    </target>
    
    <!-- =============================================== -->
    <!-- DOCS                                            -->
    <!-- =============================================== -->
    <target name="docs" depends="init, selectfiles">
        <ant antfile="${basedir}/build/build.xml" target="docs">
            <property name="dir.html"            value="${dir.html}"/>
            <property name="dir.src"             value="${dir.selected.src}"/>
            <property name="lib.funambol.common" value="${lib.funambol.common}"/>
            <property name="wtk.home"            value="${wtk.home}"/>
            <property name="classpath"           value="${classpath}"/>
            <property name="platform"            value="Java SE"/>
        </ant>
    </target>

</project>
